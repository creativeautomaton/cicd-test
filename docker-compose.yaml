services:
  postgres_db:
    container_name: postgres
    # image: postgres:latest
    image: postgres:alpine
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PW}
      - POSTGRES_DB=${POSTGRES_DB} #optional (specify default database instead of $POSTGRES_USER)
    ports:
      - "5432:5432"
    restart: always

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    # build: ./pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_MAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PW} 
    ports:
      - "5050:80"
    restart: always
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json

  django:
    container_name: django
    build: ./django
    restart: always
    command: bash -c "python manage.py runserver 0.0.0.0:80 "
    # command: bash -c "python manage.py makemigrations --noinput && python manage.py migrate && python manage.py runserver 0.0.0.0:80"
    ports:
      - '8000:80'
    environment:
      - DATABASE_URL=postgres://postgres:changeit@postgres:5432/db
    env_file: .env
    depends_on:
      - postgres_db
    volumes:
      - ./uploads:/uploads
      - ./django/:/django

  svelte:
    build: ./svelte
    volumes:
      - ./svelte:/usr/src/app
      # - ./svelte/nginx.conf:/tmp/nginx.conf
      - /usr/src/app/node_modules
      # - "~/.gitconfig:/etc/gitconfig"
    container_name: svelte-dev
    restart: on-failure
    # stdin_open: true
    # tty: true
    depends_on:
      - django
    # networks:
    #   - front-tier
    #   - back-tier
    ports:
      - "3000:3000"
    command: "npm run dev"

  svelte-prod:
    depends_on:
      - svelte-dev
    build:
      context: svelte
      dockerfile: ./Dockerfile.prod
    container_name: svelte-prod
    volumes:
      - ./svelte:/usr/src/app
    restart: always
    ports:
      - "4000:80"
    # command: "npm run package"

volumes:
  data:
  uploads:
