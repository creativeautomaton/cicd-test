version: '3'
services:

  svelte:
    build: svelte
    volumes:
      - ./svelte:/usr/src/app
      - /usr/src/app/node_modules
      # - "~/.gitconfig:/etc/gitconfig"
    container_name: svelte-dev_2
    restart: always
    stdin_open: true
    ports:
      - "3000:3000"
    expose:
      - "3000"

  svelte-prod:
    build:
      context: svelte
      dockerfile: ./Dockerfile.prod
    container_name: svelte-production_2
    restart: always
    ports:
      - "80:80"
    expose:
      - "80"

  # strapi-cli:
  #   depends_on:
  #     - postgres
  #   build:
  #     context: cli-strapi
  #     dockerfile: ./Dockerfile
  #   restart: unless-stopped
  #   container_name: strapi_cli
  #   environment:
  #     APP_NAME: strapi-app2
  #     DATABASE_CLIENT: ${DATABASE_CLIENT}
  #     DATABASE_HOST: ${DATABASE_HOST}
  #     DATABASE_PORT: ${DATABASE_PORT}
  #     DATABASE_NAME: ${DATABASE_NAME}
  #     DATABASE_DB: ${DATABASE_DB}
  #     DATABASE_USERNAME: ${DATABASE_USERNAME}
  #     DATABASE_PASSWORD: ${DATABASE_PASSWORD}
  #     DATABASE_SSL: "false"
  #   ports:
  #     - 1337:1337
  #   expose:
  #     - "1337"
  #   volumes:
  #       - ./cli-strapi:/srv/app


  api:
    depends_on:
      - postgres
    # image: strapi/strapi:3.6.8-node14
    # image: strapi/strapi:ready2  # goes to your repository on Docker Hub
    image: 376490814484.dkr.ecr.us-east-1.amazonaws.com/test-private:ready2
    restart: unless-stopped
    container_name: strapi_cms_2
    environment:
      APP_NAME: strapi-app
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_DB: ${DATABASE_DB}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_SSL: "false"
    ports:
      - 8080:1337
    volumes:
      - ./cms:/srv/cms
      - ./cms/srv:/srv/app

  postgres:
    container_name: postgres_db_2
    restart: unless-stopped
    image:  postgres:latest
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME} #optional (specify default database instead of $POSTGRES_USER)
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin_2
    image:  dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_MAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PW}
      MAX_LOGIN_ATTEMPTS: 5
      # PGADMIN_LISTEN_PORT=: ${PGADMIN_LISTEN_PORT}
    ports:
      - "5050:80"
    restart: always

volumes:
  postgres-data:
  cms:

networks:
  react-express:
  express-mongo:
