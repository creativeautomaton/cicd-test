version: '3.9'
services:
  postgres_db:
    container_name: postgres
    image: postgres:alpine
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PW}
      - POSTGRES_DB=${POSTGRES_DB} #optional (specify default database instead of $POSTGRES_USER)
    ports:
      - "5432:5432"
    restart: always

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_MAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PW}
    ports:
      - "5050:80"
    restart: always
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json

  # svelte:
  #   build: ./svelte
  #   volumes:
  #     - ./svelte:/usr/src/app
  #     - /usr/src/app/node_modules
  #     # - "~/.gitconfig:/etc/gitconfig"
  #   container_name: svelte-dev
  #   restart: on-failure
  #   depends_on:
  #     - django
  #   ports:
  #     - "3000:3000"
  #   command: "npm run dev"

  svelte-prod:
    build:
      context: ./svelte
      dockerfile: ./Dockerfile.prod
    container_name: svelte-prod
    volumes:
      - ./svelte/build:/usr/src/app
    restart: always
    ports:
      - "4000:80"
    # depends_on:
    #   - svelte-dev
    # command: "npm run package"


  ssl:
    build:
        context: ./ssl
        dockerfile: Dockerfile
    container_name: ssl
    stdin_open: true
    tty: true
    restart: "on-failure"
    volumes:
      - static:/static
      - certs:/certs

  django:
    restart: on-failure
    build:
        context: ./django
        dockerfile: Dockerfile
    container_name: django
    env_file: .env
    volumes:
      - static:/static
    ports:
      - '8000:8000'
    depends_on:
      - postgres_db
    volumes:
      - uploads:/uploads
      # - ./django/:/django

  nginx:
    build: ./nginx
    container_name: nginx
    restart: "on-failure"
    volumes:
      - static:/static
      - certs:/certs
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - django

volumes:
  data:
  uploads:
  static:
  certs:
