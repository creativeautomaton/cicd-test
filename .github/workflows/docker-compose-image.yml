name: Docker Compose Image CI

# env variables
env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  #DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
  DOCKER_TOKEN: ${{secrets.DOCKERHUB_TOKEN}}
  #DOCKER_HOST: ssh://root:${{ secrets.DOCKER_HOST_PASSWORD}}@168.235.69.236

  #SSH deploy to server action env
  SSH_PRIVATE_KEY: ${{ secrets.REMOTE_SERVER_SSH_KEY }}
  REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
  REMOTE_USER: ${{ secrets.REMOTE_USER }}

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker compose rm
        run: docker compose rm -f

      - name: Docker compose pull new images
        run: docker compose pull

      - name: Docker compose version
        run: docker compose -v

      - name: Build the docker-compose stack
        run: docker compose up -d --build

      - name: Docker image list
        run: docker image ls

      # - name: Dockerhub push
      #  run: docker compose push

  deploy:
    needs: test-docker
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PASSWORD }}
          #key: ${{ secrets.REMOTE_SERVER_SSH_KEY }}
          #port: ${{ secrets.PORT }}
          script: |
            whoami
            cd ../cdek/deploy
            pwd
            # git clone git@github.com:creativeautomaton/cicd-test.git
            cd cicd-test
            git pull
            openssl enc -d -aes256 -in env.vault -out .env -k ${{ secrets.ENV_VAULT_PASSWORD }}
            docker compose down
            docker compose up -d --build --remove-orphans
