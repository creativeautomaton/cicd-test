ssl_certificate /certs/cert.pem;
ssl_certificate_key /certs/cert-key.pem;

ssl_session_cache   shared:SSL:10m;
ssl_session_timeout 10m;

upstream django{
  server django:8000;
}

upstream svelte{
  server svelte_prod:4000;
}

#django nginx settings
server {
  listen 80;
  listen 443 ssl;
  listen [::]:443 ssl;

  server_name crib.local;
  keepalive_timeout   70;

  # return 301 https://$host$request_uri;
  # return 301 https://$host:80$request_uri;


  location / {
    proxy_pass http://django;
    proxy_set_header Host $http_host;
    # proxy_set_header Host $host;

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_redirect off;

    # Simple requests
    if ($request_method ~* "(GET|POST)") {
      add_header "Access-Control-Allow-Origin"  *;
    }

    # Preflighted requests
    if ($request_method = OPTIONS ) {
      add_header "Access-Control-Allow-Origin"  *;
      add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
      add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
      return 200;
    }
  }
  location /static/ {
      alias /static/;
  }

}


server {
  server_name crib.local;
  listen 4001;
  listen 443 ssl;
  listen [::]:443 ssl;

  location / {
    proxy_pass http://svelte;
    proxy_set_header Host $http_host;
    #proxy_set_header Host $host;

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_redirect off;
    
    if ($request_method ~* "(GET|POST)") {
      add_header "Access-Control-Allow-Origin"  *;
    }

    # Preflighted requests
    if ($request_method = OPTIONS ) {
      add_header "Access-Control-Allow-Origin"  *;
      add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
      add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
      return 200;
    }
  }

  location = /status {
    access_log off;
    default_type text/plain;
    add_header Content-Type text/plain;
    return 200 "alive";
  }

  location ~* \.(js|png|svg|jpg|jpeg|css)$ {
    root /usr/share/nginx/html/;
  }
}

# server {
#   server_name crib.local;
#   listen 3000;
#   location / {
#     proxy_pass http://localhost:3000;
#   }
# }
